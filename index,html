<!DOCTYPE html>
<html lang="en">
<head>

  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Articleâ€¯Hub â€” Fresh Tech & Productivity Reads</title><link href="https://fonts.googleapis.com/css2?family=Inter+Tight:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">>

  <meta name="description" content="Article Hub delivers a real-time stream of concise, high-quality articles on technology, productivity, and creative ideas." />
  <meta name="keywords" content="articles, blog, tech news, productivity tips, firebase, realtime database" />
  <meta name="robots" content="index, follow" />
  <link rel="canonical" href="https://www.example.com/" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://www.example.com/" />
  <meta property="og:title" content="Article Hub" />
  <meta property="og:description" content="Read the latest articles on tech, productivity and more â€” updated in real-time." />
  <meta property="og:image" content="https://www.example.com/og-cover.jpg" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Article Hub" />
  <meta name="twitter:description" content="Fresh tech & productivity reads, updated live." />
  <meta name="twitter:image" content="https://www.example.com/og-cover.jpg" />

  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "url": "https://www.example.com/",
    "name": "Article Hub",
    "potentialAction": {
      "@type": "SearchAction",
      "target": "https://www.example.com/?q={search_term_string}",
      "query-input": "required name=search_term_string"
    }
  }
  </script>

  <style>
    :root {
      --clr-bg:        hsl(0 0% 98%);
      --clr-surface:   hsl(0 0% 100%);
      --clr-onSurf:    hsl(220 15% 15%);
      --clr-muted:     hsl(220 10% 45%);
      --clr-primary:   hsl(215 70% 55%);
      --radius-nav:    20px;
      --border-color:  #000;
    }

    @media (prefers-color-scheme: dark) {
      :root {
        --clr-bg:       hsl(222 28% 12%);
        --clr-surface:  hsl(222 25% 18%);
        --clr-onSurf:   hsl(0 0% 98%);
        --clr-muted:    hsl(220 10% 70%);
        --clr-primary:  hsl(215 70% 65%);
        --border-color: #fff;
      }
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: "Inter Tight", system-ui, sans-serif;
      background: var(--clr-bg);
      color: var(--clr-onSurf);
      line-height: 1.6;
    }

    /* Navbar Glassmorphic */
    .navbar {
      position: sticky;
      top: 1rem;
      z-index: 100;
      margin: 0 2rem;
      padding: 1rem 2rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(14px) saturate(180%);
      -webkit-backdrop-filter: blur(14px) saturate(180%);
      border: 1px solid rgba(255, 255, 255, 0.3);
      border-radius: var(--radius-nav);
    }

    @media (prefers-color-scheme: dark) {
      .navbar {
        background: rgba(40, 40, 48, 0.25);
        border-color: rgba(255, 255, 255, 0.12);
      }
    }
.navbar h1,
.card h2 {
  font-weight: 700;
  letter-spacing: -0.01em;
}

    .navbar h1 {
      font-size: 1.3rem;
      font-weight: 600;
    }

    .navbar a {
      text-decoration: none;
      font-weight: 600;
      padding: 0.4rem 0.9rem;
      color: var(--clr-muted);
      border-radius: 6px;
    }

    .navbar a.active {
      color: var(--clr-surface);
      background-color: var(--clr-primary);
    }

    /* Main Content */
    .container {
      max-width: 1000px;
      margin: 2.5rem auto;
      padding: 0 1rem;
      display: grid;
      gap: 1.75rem;
    }

    .card {
      background: var(--clr-surface);
      border: 1px solid var(--border-color);
      padding: 1.5rem 1.75rem;
      border-radius: 0;
      position: sticky;
      top: calc(var(--radius-nav) + 4.5rem);
    }

    .card h2 {
      font-size: 1.3rem;
      margin-bottom: 0.5rem;
      line-height: 1.3;
    }

    .card p {
      color: var(--clr-muted);
      margin-bottom: 0.75rem;
    }

    .card time {
      font-size: 0.875rem;
      color: var(--clr-muted);
    }

    .site-footer {
      text-align: center;
      padding: 2rem 1rem 3rem;
      font-size: 0.875rem;
      color: var(--clr-muted);
    }
  </style>
</head>
<body>
  <header class="navbar">
    <h1>ðŸ“° Article Hub</h1>
    <nav><a class="active" href="/">Home</a></nav>
  </header>

  <main class="container" id="articleList">
    <noscript>Please enable JavaScript to view articles.</noscript>
  </main>

  <footer class="site-footer">
    <p>&copy; 2025 Article Hub.</p>
  </footer>

  <script type="module">
    import { initializeApp }   from "https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";
    import { getDatabase, ref, onValue }
                               from "https://www.gstatic.com/firebasejs/10.12.0/firebase-database.js";

    const firebaseConfig = {
      apiKey: "AIzaSyAp9kCBsDLnQEmR7wWHXwt3FB2T1zDtiqU",
      authDomain: "h-90-8a7c5.firebaseapp.com",
      databaseURL: "https://h-90-8a7c5-default-rtdb.firebaseio.com",
      projectId: "h-90-8a7c5",
      storageBucket: "h-90-8a7c5.appspot.com",
      messagingSenderId: "367196609301",
      appId: "1:367196609301:web:156e24c1b4532c26af671c"
    };

    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);
    const list = document.getElementById("articleList");

    const ld = document.createElement("script");
    ld.type = "application/ld+json";
    document.head.appendChild(ld);

    onValue(ref(db, "articles"), (snap) => {
      list.innerHTML = "";
      const data = snap.val() ?? {};
      const articles = Object.entries(data).sort(
        (a, b) => (b[1].timestamp ?? 0) - (a[1].timestamp ?? 0)
      );

      const itemList = {
        "@context": "https://schema.org",
        "@type": "ItemList",
        "itemListElement": [],
      };

      articles.forEach(([key, art], i) => {
        const id = `art-${key}`;
        const card = document.createElement("article");
        card.className = "card";
        card.id = id;
        card.innerHTML = `
          <h2>${art.title}</h2>
          <p>${art.content}</p>
          <time>${new Date(art.timestamp).toLocaleString()}</time>
        `;
        list.appendChild(card);

        itemList.itemListElement.push({
          "@type": "ListItem",
          "position": i + 1,
          "name": art.title,
          "url": location.origin + "/#" + id,
        });
      });

      ld.textContent = JSON.stringify(itemList);
    });
  </script>
</body>
</html>
